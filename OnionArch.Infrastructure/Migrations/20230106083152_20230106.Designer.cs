// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnionArch.Infrastructure.Database;

#nullable disable

namespace OnionArch.Infrastructure.Migrations
{
    [DbContext(typeof(OnionArchDb20Context))]
    [Migration("20230106083152_20230106")]
    partial class _20230106
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnionArch.Domain.Common.Base.DomainEventEntity<OnionArch.Domain.ProductInventory.ProductInventory>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AggregateRootEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateRootId")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OccurredBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AggregateRootEntityId");

                    b.ToTable("ProductInventoryDomainEvents");
                });

            modelBuilder.Entity("OnionArch.Domain.ProductInventory.ProductInventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("InventoryAmount")
                        .HasColumnType("integer");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ProductInventory");
                });

            modelBuilder.Entity("OnionArch.Domain.Common.Base.DomainEventEntity<OnionArch.Domain.ProductInventory.ProductInventory>", b =>
                {
                    b.HasOne("OnionArch.Domain.ProductInventory.ProductInventory", "AggregateRootEntity")
                        .WithMany("DomainEvents")
                        .HasForeignKey("AggregateRootEntityId");

                    b.Navigation("AggregateRootEntity");
                });

            modelBuilder.Entity("OnionArch.Domain.ProductInventory.ProductInventory", b =>
                {
                    b.Navigation("DomainEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
